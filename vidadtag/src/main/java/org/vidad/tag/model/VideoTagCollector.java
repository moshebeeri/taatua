/**
 * This file was generated by Moshe Beeri
 * Aug 13, 2013
 * org.vidad.tag.model
 */
package org.vidad.tag.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.RequestScoped;
import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.convert.Converter;
import javax.faces.event.AjaxBehaviorEvent;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.openfaces.util.Faces;
import org.vidad.data.Tag;
import org.vidad.tools.nosql.Mongodb;

/**
 * @author Moshe Beeri
 *
 */
@ManagedBean	
@RequestScoped
public class VideoTagCollector  implements Serializable{
	/**
	 * serialVersionUID -
	 */
	private static final long serialVersionUID = -5849533532636382036L;
	transient Logger log = Logger.getLogger(VideoTagCollector.class);
	
	boolean initial = true;
	String status="";
	String tagName="";
	@ManagedProperty(value = "#{param.videoId}")
	String videoId;
	String taxonomyId= "";	
	double videoTimeStamp=0d;
	
	List<String> videoTags = new ArrayList<String>();
	List<String> suggestedTags = new ArrayList<String>();
	
	public VideoTagCollector() {
		super();
	}

	protected void insertTag(){
		Tag tag = new Tag(tagName, taxonomyId, videoTimeStamp, "");
		Mongodb.getInstance().insertCollectionable(tag);		
	}
	
	@SuppressWarnings("unchecked")
	public void add(AjaxBehaviorEvent e){
        FacesContext facesContext = FacesContext.getCurrentInstance();
        HttpSession session = (HttpSession) facesContext.getExternalContext().getSession(true);       
        if(session.getAttribute("tags")!=null)
        	videoTags = (List<String>) session.getAttribute("tags");
        else
        	session.setAttribute("tags", videoTags);
		//log.info(e.getSource().toString());
		String messge = "tag created for videoId: " + videoId + " taxonomy: "+tagName +" at video time: " + videoTimeStamp;
		log.info(messge);
		initial=false;
		status = messge;
		videoTags.add(tagName);
		for(String t : videoTags)
			System.out.println(t);
	}
	private List<String> autocomplete;
	
	public List<String> getAutocomplete() {
		return autocomplete;
	}

	public void setAutocomplete(List<String> autocomplete) {
		this.autocomplete = autocomplete;
	}
	private List<String> searchTag;
	public List<String> searchTagAll(Object prefix) {
        ArrayList<String> result = new ArrayList<String>();
        if ((prefix == null) || (((String)prefix).length() == 0)) {
            for (int i = 0; i < 10; i++) {
                result.add("start" + i);
            }
        } else {
            for (int i = 0; i < 10; i++) {
                result.add(prefix + " " + i);
            }
        }
        return searchTag=result;
    }
	
	public List<String> getSearchTag() {
		return searchTag;
	}

	public void setSearchTag(List<String> searchTag) {
		this.searchTag = searchTag;
	}
	public String tagNameConverter(String in){
		return in;
	}
	public Converter getTagNameConverter(){
		return new Converter() {
			
			@Override
			public String getAsString(FacesContext context, UIComponent converter, Object value) {
				System.out.println(Faces.var("Converter.searchString", String.class));
				System.out.println("getAsString=" +(String)value);
				return (String)value;
			}
			
			@Override
			public Object getAsObject(FacesContext context, UIComponent converter, String value) {
				System.out.println("getAsObject=" +value);
				return value;
			}
		};
	}

	public List<String> getSuggestedTags(){
		String searchString = Faces.var("searchString", String.class);
		System.out.println("searchString="+ searchString);

//		if(searchString==null)
//			return new ArrayList<String>();
		suggestedTags = Arrays.asList(new String[]{"ford", "mazda", "fiat"});
			
		return suggestedTags;	
	}
	public void reset(AjaxBehaviorEvent e){
		status="";
		tagName="";
		videoTimeStamp=0d;
		videoTags = new ArrayList<String>();
	}

	/**
	 * @return the initial
	 */
	public boolean isInitial() {
		return initial;
	}

	/**
	 * @param initial the initial to set
	 */
	public void setInitial(boolean initial) {
		this.initial = initial;
	}

	/**
	 * @return the status
	 */
	public String getStatus() {
		return status;
	}

	/**
	 * @param status the status to set
	 */
	public void setStatus(String status) {
		this.status = status;
	}

	public String getTagName() {
		return tagName;
	}

	public void setTagName(String tagName) {
		this.tagName = tagName;
	}

	public double getVideoTimeStamp() {
		return videoTimeStamp;
	}

	public void setVideoTimeStamp(double videoTimeStamp) {
		this.videoTimeStamp = videoTimeStamp;
	}

	public List<String> getTags() {
		return videoTags;
	}

	public void setTags(List<String> tags) {
		this.videoTags = tags;
	}

	public String getVideoId() {
		return videoId;
	}

	public void setVideoId(String videoId) {
		this.videoId = videoId;
	}

	public String getTaxonomyId() {
		return taxonomyId;
	}

	public void setTaxonomyId(String taxonomyId) {
		this.taxonomyId = taxonomyId;
	}

}
